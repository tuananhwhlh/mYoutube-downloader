name: test
on:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:14.4
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.1.2
          bundler-cache: true

      - name: Bundle Install
        run: |
          gem install bundler --version 2.3.21
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Create Database
        env:
          RAILS_ENV: test
        run: |
          cp .env.example .env
          bundle exec rails db:create db:migrate

      - name: Run test
        run: |
          bundle exec rails tailwindcss:build
          COVERAGE=true bundle exec rspec spec/ -f p
